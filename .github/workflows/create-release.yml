name: Create Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release Type"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from package.json
        id: package_version
        run: |
          version=$(node -p "require('./package.json').version")
          echo "current_version=v${version}" >> $GITHUB_OUTPUT

      - name: Calculate next version
        id: next_version
        run: |
          current_version=${{ steps.package_version.outputs.current_version }}
          IFS='.' read -r major minor patch <<< "${current_version#v}"

          case "${{ github.event.inputs.release_type }}" in
            "major")
              new_version="$((major + 1)).0.0"
              ;;
            "minor")
              new_version="${major}.$((minor + 1)).0"
              ;;
            "patch")
              new_version="${major}.${minor}.$((patch + 1))"
              ;;
          esac

          echo "version=${new_version}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          fromTag: ${{ steps.get_latest_tag.outputs.latest_tag }}
          toTag: HEAD
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.next_version.outputs.version }}
          name: Release v${{ steps.next_version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
